// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NominaSoft.Infraestructure.EFCore;

namespace NominaSoft.Infraestructure.Migrations
{
    [DbContext(typeof(NSContext))]
    partial class NSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NominaSoft.Core.Entities.AFP", b =>
                {
                    b.Property<int>("IdAFP")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Habilitado");

                    b.Property<string>("NombreAFP")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double>("PorcentajeDescuento");

                    b.HasKey("IdAFP");

                    b.ToTable("AFP");
                });

            modelBuilder.Entity("NominaSoft.Core.Entities.BoletaPago", b =>
                {
                    b.Property<int>("IdBoletaPago")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("FechaPago");

                    b.Property<bool>("Habilitado");

                    b.Property<int>("IdConceptosDePago");

                    b.Property<int>("IdContrato");

                    b.Property<int>("IdPeriodoPago");

                    b.HasKey("IdBoletaPago");

                    b.HasIndex("IdConceptosDePago")
                        .IsUnique();

                    b.HasIndex("IdContrato");

                    b.HasIndex("IdPeriodoPago");

                    b.ToTable("BoletaPago");
                });

            modelBuilder.Entity("NominaSoft.Core.Entities.ConceptosDePago", b =>
                {
                    b.Property<int>("IdConceptosDePago")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Habilitado");

                    b.Property<int>("IdContrato");

                    b.Property<int>("IdPeriodoPago");

                    b.Property<double>("MontoDeOtrosDescuentos");

                    b.Property<double>("MontoDeOtrosIngresos");

                    b.Property<double>("MontoPorAdelantos");

                    b.Property<double>("MontoPorHorasAusentes");

                    b.Property<double>("MontoPorHorasExtra");

                    b.Property<double>("MontoPorReintegro");

                    b.HasKey("IdConceptosDePago");

                    b.HasIndex("IdContrato");

                    b.HasIndex("IdPeriodoPago");

                    b.ToTable("ConceptoPago");
                });

            modelBuilder.Entity("NominaSoft.Core.Entities.Contrato", b =>
                {
                    b.Property<int>("IdContrato")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cargo")
                        .HasMaxLength(50);

                    b.Property<bool>("EsAnulado");

                    b.Property<bool>("EsAsignacionFamiliar");

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<bool>("Habilitado");

                    b.Property<int>("IdAFP");

                    b.Property<int>("IdEmpleado");

                    b.Property<int>("TotalHorasSemanales");

                    b.Property<int>("ValorHora");

                    b.HasKey("IdContrato");

                    b.HasIndex("IdAFP");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("NominaSoft.Core.Entities.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Direccion")
                        .HasMaxLength(80);

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("EstadoCivil");

                    b.Property<DateTime>("FechaDeNacimiento");

                    b.Property<int>("Grado");

                    b.Property<bool>("Habilitado");

                    b.Property<string>("NombreEmpleado")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefono");

                    b.HasKey("IdEmpleado");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("NominaSoft.Core.Entities.PeriodoPago", b =>
                {
                    b.Property<int>("IdPeriodoPago")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Esactivo");

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<bool>("Habilitado");

                    b.HasKey("IdPeriodoPago");

                    b.ToTable("PeriodoPago");
                });

            modelBuilder.Entity("NominaSoft.Core.Entities.BoletaPago", b =>
                {
                    b.HasOne("NominaSoft.Core.Entities.ConceptosDePago", "ConceptosDePago")
                        .WithOne("BoletaPago")
                        .HasForeignKey("NominaSoft.Core.Entities.BoletaPago", "IdConceptosDePago")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NominaSoft.Core.Entities.Contrato", "Contrato")
                        .WithMany("BoletasPago")
                        .HasForeignKey("IdContrato")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NominaSoft.Core.Entities.PeriodoPago", "PeriodoPago")
                        .WithMany("BoletasPago")
                        .HasForeignKey("IdPeriodoPago")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NominaSoft.Core.Entities.ConceptosDePago", b =>
                {
                    b.HasOne("NominaSoft.Core.Entities.Contrato", "Contrato")
                        .WithMany("ConceptosDePago")
                        .HasForeignKey("IdContrato")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NominaSoft.Core.Entities.PeriodoPago", "PeriodoPago")
                        .WithMany("ConceptosPago")
                        .HasForeignKey("IdPeriodoPago")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NominaSoft.Core.Entities.Contrato", b =>
                {
                    b.HasOne("NominaSoft.Core.Entities.AFP", "AFP")
                        .WithMany("Contratos")
                        .HasForeignKey("IdAFP")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NominaSoft.Core.Entities.Empleado", "Empleado")
                        .WithMany("Contratos")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
